# Risco relativo
risco_relativo <- p_fumante / p_nao_fumante
cat("Risco relativo:", risco_relativo, "\n")
# Chances de câncer em cada grupo
odds_fumante <- (114 / 156)
odds_nao_fumante <- (117 / 263)
# Razão de chances (Odds Ratio)
odds_ratio <- odds_fumante / odds_nao_fumante
cat("Razão de chances (Odds Ratio):", odds_ratio, "\n")
cat("Probabilidade Fumante:", p_fumante, "\n")
cat("Probabilidade Não Fumante:", p_nao_fumante, "\n")
x <- c(11.4,11.2,13.9,12.1,5.6,13.1,14.8,11.6,16.3,16,6.1,11.5)
y <- c(-13.6,11.2,19.6,8,3.9,8.6,-3.3,8,16,12.2,2.4,5.7)
pers <- cor(x, y, method = c("pearson"))
spe <- cor(x, y, method = c("spearman"))
round(pers, digits = 3)
round(spe, digits = 3)
x <- c(18.2,6.9,18.8,10.4,18.1,9.9,13.5,17.4,10.2,9.4,17.4,18.9)
y <- c(-28.5,-12.8,-30.6,-20.2,-30.8,-10.2,-20.8,-29.7,-16.8,-10.5,-40.3,-41.9)
pers <- cor(x, y, method = c("pearson"))
spe <- cor(x, y, method = c("spearman"))
round(pers, digits = 3)
round(spe, digits = 3)
min(2,6)
mmc(2,6)
# Criando a matriz de dados
tabela <- matrix(c(114, 117, 156, 263), nrow = 2, byrow = TRUE)
colnames(tabela) <- c("Fumante", "Não Fumante")
rownames(tabela) <- c("Câncer", "Sem Câncer")
# Exibir tabela
print(tabela)
# Probabilidade de ter câncer nos grupos
p_fumante <- (114 / 270)
p_nao_fumante <- (117 / 380)
# Risco relativo
risco_relativo <- p_fumante / p_nao_fumante
cat("Risco relativo:", risco_relativo, "\n")
# Chances de câncer em cada grupo
odds_fumante <- (114 / 156)
odds_nao_fumante <- (117 / 263)
# Razão de chances (Odds Ratio)
odds_ratio <- odds_fumante / odds_nao_fumante
cat("Chances - Fumantes:", odds_fumante. "\n")
# Criando a matriz de dados
tabela <- matrix(c(114, 117, 156, 263), nrow = 2, byrow = TRUE)
colnames(tabela) <- c("Fumante", "Não Fumante")
rownames(tabela) <- c("Câncer", "Sem Câncer")
# Exibir tabela
print(tabela)
# Probabilidade de ter câncer nos grupos
p_fumante <- (114 / 270)
p_nao_fumante <- (117 / 380)
# Risco relativo
risco_relativo <- p_fumante / p_nao_fumante
cat("Risco relativo:", risco_relativo, "\n")
# Chances de câncer em cada grupo
odds_fumante <- (114 / 156)
odds_nao_fumante <- (117 / 263)
# Razão de chances (Odds Ratio)
odds_ratio <- odds_fumante / odds_nao_fumante
cat("Chances - Fumantes:", odds_fumante, "\n")
cat("Chances - Não Fumantes:", odds_nao_fumante, "\n")
cat("Razão de chances (Odds Ratio):", odds_ratio, "\n")
cat("Probabilidade Fumante:", p_fumante, "\n")
cat("Probabilidade Não Fumante:", p_nao_fumante, "\n")
# Criando a matriz de dados
tabela <- matrix(c(114, 117, 156, 263), nrow = 2, byrow = TRUE)
colnames(tabela) <- c("Fumante", "Não Fumante")
rownames(tabela) <- c("Câncer", "Sem Câncer")
# Exibir tabela
print(tabela)
# Probabilidade de ter câncer nos grupos
p_fumante <- (114 / 270)
p_nao_fumante <- (117 / 380)
# Risco relativo
risco_relativo <- p_fumante / p_nao_fumante
cat("Risco relativo:", risco_relativo, "\n")
# Chances de câncer em cada grupo
odds_fumante <- (114 / 156)
odds_nao_fumante <- (117 / 263)
# Razão de chances (Odds Ratio)
odds_ratio <- odds_fumante / odds_nao_fumante
cat("Chances - Fumantes:", round(odds_fumante, digits = 3), "\n")
cat("Chances - Não Fumantes:", odds_nao_fumante, "\n")
cat("Razão de chances (Odds Ratio):", odds_ratio, "\n")
cat("Probabilidade Fumante:", p_fumante, "\n")
cat("Probabilidade Não Fumante:", p_nao_fumante, "\n")
# Criando a matriz de dados
tabela <- matrix(c(114, 117, 156, 263), nrow = 2, byrow = TRUE)
colnames(tabela) <- c("Fumante", "Não Fumante")
rownames(tabela) <- c("Câncer", "Sem Câncer")
# Exibir tabela
print(tabela)
# Probabilidade de ter câncer nos grupos
p_fumante <- (114 / 270)
p_nao_fumante <- (117 / 380)
# Risco relativo
risco_relativo <- p_fumante / p_nao_fumante
cat("Risco relativo:", risco_relativo, "\n")
# Chances de câncer em cada grupo
odds_fumante <- (114 / 156)
odds_nao_fumante <- (117 / 263)
# Razão de chances (Odds Ratio)
odds_ratio <- odds_fumante / odds_nao_fumante
cat("Chances - Fumantes:", round(odds_fumante, digits = 3), "\n")
cat("Chances - Não Fumantes:", round(odds_nao_fumante, digits = 3), "\n")
cat("Razão de chances (Odds Ratio):", round(odds_ratio, digits = 3), "\n")
cat("Probabilidade Fumante:", round(p_fumante, digits = 3), "\n")
cat("Probabilidade Não Fumante:", round(p_nao_fumante, digits = 3), "\n")
# Criar tabela de contingência
dados <- matrix(c(35,55,33,27,39,11), nrow = 2)
print(dados)
n <- 200
x_2 <- chisq.test(dados)
chi2 <- x_2$statistic
C <- sqrt(chi2/(chi2+n))
t <- min(2, 2)
Cstar <- C / sqrt((t-1)/t)
V <- sqrt(chi2/(n*(t-1)))
#round(C, digits = 3)
round(C, digits = 3)
round(Cstar, digits = 3)
round(V, digits = 3)
x <- c(18.2,6.9,18.8,10.4,18.1,9.9,13.5,17.4,10.2,9.4,17.4,18.9)
y <- c(-28.5,-12.8,-30.6,-20.2,-30.8,-10.2,-20.8,-29.7,-16.8,-10.5,-40.3,-41.9)
pers <- cor(x, y, method = c("pearson"))
spe <- cor(x, y, method = c("spearman"))
round(pers, digits = 3)
round(spe, digits = 3)
x <- c(18.2,6.9,18.8,10.4,18.1,9.9,13.5,17.4,10.2,9.4,17.4,18.9)
y <- c(-28.5,-12.8,-30.6,-20.2,-30.8,-10.2,-20.8,-29.7,-16.8,-10.5,-40.3,-41.9)
pers <- cor(x, y, method = c("pearson"))
spe <- cor(x, y, method = c("spearman"))
round(pers, digits = 3)
round(spe, digits = 3)
# Criando a matriz de dados
tabela <- matrix(c(114, 117, 156, 263), nrow = 2, byrow = TRUE)
colnames(tabela) <- c("Fumante", "Não Fumante")
rownames(tabela) <- c("Câncer", "Sem Câncer")
# Exibir tabela
print(tabela)
# Probabilidade de ter câncer nos grupos
p_fumante <- (114 / 270)
p_nao_fumante <- (117 / 380)
# Risco relativo
risco_relativo <- p_fumante / p_nao_fumante
cat("Risco relativo:", risco_relativo, "\n")
# Chances de câncer em cada grupo
odds_fumante <- (114 / 156)
odds_nao_fumante <- (117 / 263)
# Razão de chances (Odds Ratio)
odds_ratio <- odds_fumante / odds_nao_fumante
cat("Chances - Fumantes:", round(odds_fumante, digits = 3), "\n")
cat("Chances - Não Fumantes:", round(odds_nao_fumante, digits = 3), "\n")
cat("Razão de chances (Odds Ratio):", round(odds_ratio, digits = 3), "\n")
cat("Probabilidade Fumante:", round(p_fumante, digits = 3), "\n")
cat("Probabilidade Não Fumante:", round(p_nao_fumante, digits = 3), "\n")
k <- 8  # Elementos escolhidos
# Função para calcular combinação
combinacao <- function(n, k) {
return(choose(n, k))
}
# Exemplo de uso
n <- 100  # Total de elementos
k <- 8  # Elementos escolhidos
resultado <- combinacao(n, k)
cat("A combinação de", n, "tomados", k, "a cada vez é:", resultado, "\n")
# Função para calcular combinação
combinacao <- function(n, k) {
return(choose(n, k))
}
# Exemplo de uso
#n <- 100  # Total de elementos
#k <- 8  # Elementos escolhidos
resultado <- combinacao(100, 8)
cat("A combinação de", n, "tomados", k, "a cada vez é:", resultado, "\n")
# Função para calcular combinação
combinacao <- function(n, k) {
return(choose(n, k))
}
# Exemplo de uso
#n <- 100  # Total de elementos
#k <- 8  # Elementos escolhidos
total <- combinacao(100, 8)
sem_NY <- combinacao(98,8)
resp1 <- (total - sem_NY)
com1 <- combinacao(98, 6)
com2<- combinacao(98,7)
rep2 <- (com1+com2)
print("A divizão das respostas é:", (resp1/rep2))
# Função para calcular combinação
combinacao <- function(n, k) {
return(choose(n, k))
}
# Exemplo de uso
#n <- 100  # Total de elementos
#k <- 8  # Elementos escolhidos
total <- combinacao(100, 8)
sem_NY <- combinacao(98,8)
resp1 <- (total - sem_NY)
com1 <- combinacao(98, 6)
com2<- combinacao(98,7)
resp2 <- (com1+com2)
div <- resp1/resp2
print(div)
# Função para calcular combinação
combinacao <- function(n, k) {
return(choose(n, k))
}
# Exemplo de uso
#n <- 100  # Total de elementos
#k <- 8  # Elementos escolhidos
total <- combinacao(100, 8)
sem_NY <- combinacao(98,8)
resp1 <- (total - sem_NY)
com1 <- combinacao(98, 6)
com2<- combinacao(98,7)
resp2 <- (com1+(2 * com2))
div <- resp1/resp2
print(div)
dados <- read.csv("Base de Dados")
dados <- read.csv("Base de Dados.csv")
dados <- read.csv("base_de_dados.csv")
version
install.packages('installr')
library(installr)
updateR()
warnings()
clear
ggplot
tidyverse
library('ggplort')
library(tidyverse[])
dados <- read.csv("base_de_dados.csv")
setwd("C:\Users\JoaoS\Documents\lista 8")
read.csv("base_de_dados")
install.packages("readxl")
library(readxl)
dados <- read_xls("base_de_dados")
library(readxl)
dados <- read_xls("base_de_dados.xlsx")
# Importar a primeira planilha
dados <- read_excel("C:\Users\JoaoS\Documents\lista 8\base_de_dados.xlsx")
# Importar a primeira planilha
dados <- read_excel("C:/Users/JoaoS/Documents/lista 8/base_de_dados.xlsx")
# Ver os dados
View(dados)
library(readxl)
base_de_dados <- read_excel("lista 8/base_de_dados.xlsx",
sheet = "Indice")
View(base_de_dados)
library(dplyr)
require(dplyr)
require(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse[")
install.packages("tidyverse")
require(tidyverse)
require(dplyr)
#Código executado pelo 'import dataset'
library(readxl)
base_de_dados <- read_excel("lista 8/base_de_dados.xlsx",
sheet = "Indice")
library(dplyr)
variaveis <- Indice %>%
select(id, Municipio, Pontuação, UF, população2019, contains("ODS"))
#Código executado pelo 'import dataset'
library(readxl)
base_de_dados <- read_excel("lista 8/base_de_dados.xlsx",
sheet = "Indice")
library(dplyr)
variaveis <- base_de_dados %>%
select(id, Municipio, Pontuação, UF, população2019, contains("ODS"))
#Código executado pelo 'import dataset'
library(readxl)
base_de_dados <- read_excel("lista 8/base_de_dados.xlsx",
sheet = "Indice")
library(dplyr)
variaveis <- base_de_dados %>%
select(id, Munícipio, Pontuação, UF, população2019, contains("ODS"))
#Código executado pelo 'import dataset'
library(readxl)
base_de_dados <- read_excel("lista 8/base_de_dados.xlsx",
sheet = "Indice")
library(dplyr)
variaveis <- base_de_dados %>%
select(id, Município, Pontuação, UF, população2019, contains("ODS"))
#Código executado pelo 'import dataset'
library(readxl)
base_de_dados <- read_excel("lista 8/base_de_dados.xlsx",
sheet = "Indice")
library(dplyr)
variaveis <- base_de_dados %>%
select(id, Município, Pontuação, UF, população_2019, contains("ODS"))
#Código executado pelo 'import dataset'
library(readxl)
base_de_dados <- read_excel("lista 8/base_de_dados.xlsx",
sheet = "Indice")
library(dplyr)
variaveis <- base_de_dados %>%
select(id, Município, Pontuação, UF, População_2019, contains("ODS"))
view(variaveis)
View(dados)
variaveis_sem_regional <- variaveis %>%
select(-contains("regional"))
view(variaveis_sem_regional)
#utilizando a função filter
dados_mg <- variaveis_sem_regional %>%
filter(UF == "Minas Gerais")
view(dados_mg)
#utilizando a função filter
dados_mg <- filter(data = variaveis_sem_regional,   UF == "Minas Gerais")
#Código executado pelo 'import dataset'
library(readxl)
base_de_dados <- read_excel("lista 8/base_de_dados.xlsx",
sheet = "Indice")
#Selecionando as variáveis pedidas na questão
library(dplyr)
variaveis <- base_de_dados %>%
select(id, Município, Pontuação, UF, População_2019, contains("ODS"))
#Filtrando o banco com "-contains()" ,
#"-" significa remover o elemento passado no argumento
variaveis_sem_regional <- variaveis %>%
select(-contains("regional"))
#utilizando a função filter
dados_mg <- filter(data = variaveis_sem_regional, UF == "Minas Gerais")
view(variaveis_sem_regional)
#utilizando a função filter
dados_mg <- filter(data = variaveis_sem_regional, UF == "Minas Gerais")
#utilizando a função filter
dados_mg <- filter(data = variaveis_sem_regional, UF = "Minas Gerais")
#utilizando a função filter
dados_mg <- filter(data = variaveis_sem_regional, UF == "MG")
#utilizando a função filter
dados_mg <- filter(variaveis_sem_regional, UF == "MG")
view(dados_mg)
# Questão 04
#acrescentando a nova coluna -- utilizando a função mutate
nova_coluna <- mutate(variaveis, soma_ODS = (Pontuação ODS1 + Pontuação ODS2 + Pontuação ODS3))
# Questão 04
#acrescentando a nova coluna -- utilizando a função mutate
nova_coluna <- mutate(variaveis, soma_ODS = Pontuação ODS1 + Pontuação ODS2 + Pontuação ODS3)
# Questão 04
#acrescentando a nova coluna -- utilizando a função mutate
nova_coluna <- mutate(variaveis, soma_ODS = Pontuação_ODS1 + Pontuação_ODS2 + Pontuação_ODS3)
variaveis %>%
mutate(variaveis, soma_ODS = Pontuação ODS1 + Pontuação ODS2 + Pontuação ODS3)
# Questão 04
#acrescentando a nova coluna -- utilizando a função mutate
variaveis %>%
mutate(variaveis, soma_ODS = Pontuação ODS1 + Pontuação ODS2 + Pontuação ODS3)
# Questão 04
#acrescentando a nova coluna -- utilizando a função mutate
variaveis %>%
mutate(variaveis, soma_ODS = 'Pontuação ODS1' + 'Pontuação ODS2' + 'Pontuação ODS3')
#Renomeando as colunas para evitar um erro:
variaveis %>%
mutate(soma_ODS = `Pontuação ODS1` + `Pontuação ODS2` + `Pontuação ODS3`)
view(variaveis$soma_ODS)
#Renomeando as colunas para evitar um erro:
dados_mg %>%
mutate(soma_ODS = `Pontuação ODS1` + `Pontuação ODS2` + `Pontuação ODS3`)
#Renomeando as colunas para evitar um erro:
dados_mg %>%
mutate(soma_ODS = Pontuação ODS1 + Pontuação ODS2 + Pontuação ODS3)
#Renomeando as colunas para evitar um erro:
dados_mg %>%
mutate(soma_ODS = "Pontuação ODS1" + "Pontuação ODS2" + "Pontuação ODS3")
#Renomeando as colunas para evitar um erro:
dados_mg %>%
mutate(soma_ODS = 'Pontuação ODS1' + 'Pontuação ODS2' + 'Pontuação ODS3')
#Renomeando as colunas para evitar um erro:
dados_mg %>%
mutate(soma_ODS = `Pontuação ODS1` + `Pontuação ODS2` + `Pontuação ODS3`)
view(dados_mg)
#Renomeando as colunas para evitar um erro:
variaveis_com_somaods<- variaveis %>%
mutate(soma_ODS = `Pontuação ODS1` + `Pontuação ODS2` + `Pontuação ODS3`)
view(variaveis_com_somaods)
view(dados_mg)
clear
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
# Importando os pacotes
# Importando o banco de dados
dados <- read.csv("data_science_salaries.csv")
dados <- read.csv("data_science_salaries")
# Importando os pacotes
# Importando o banco de dados
dados <- read.csv("data_science_salaries.csv")
# Importando os pacotes
# Importando o banco de dados
dados <- read.csv("data_science_salaries.csv")
# Importando os pacotes
# Importando o banco de dados
dados <- read.csv("data_science_salaries.csv")
# Importando os pacotes
# Importando o banco de dados
library(readxl)
dados <- read.csv("data_science_salaries.csv")
# Importando os pacotes
# Importando o banco de dados
library(readxl)
#dados <- read.csv("data_science_salaries.csv")
dados1<- read_xls("data_science_salaries")
# Importando os pacotes
# Importando o banco de dados
library(readxl)
#dados <- read.csv("data_science_salaries.csv")
dados1<- read_xls("data_science_salaries.xls")
# Importando os pacotes
# Importando o banco de dados
library(readxl)
#dados <- read.csv("data_science_salaries.csv")
dados1<- read_xlsx("data_science_salaries.xlsx")
getwd()
# Importando os pacotes
# Importando o banco de dados
library(readxl)
dados <- read.csv("data_science_salaries.csv")
print(dados)
# Importando os pacotes
# Importando o banco de dados
library(readxl)
dados <- read.csv("data_science_salaries.csv")
getwd()
setwd("C:\Users\JoaoS\Documents\trabalhofinal_cd")
setwd("Users\JoaoS\Documents\trabalhofinal_cd")
setwd("C:/Users/JoaoS/Documents/trabalhofinal_cd")
getwd()
# Importando os pacotes
# Importando o banco de dados
library(readxl)
dados <- read.csv("data_science_salaries.csv")
print(dados)
View(dados)
dados <- read.csv("data_science_salaries.csv")
bancoBR23 <- read.csv("stateofdata_2023.csv")
bancoBR24 <-read.csv("stateofdata_2024")
bancoBR24 <- read.csv("stateofdata_2024.csv")
View(bancoBR23)
View(bancoBR24)
bancoGringo <- read.csv("data_science_salaries")
bancoGringo <- read.csv("data_science_salaries.csv")
View(bancoGringo)
names(bancoGringo)
names(bancoBR23)
names(bancoGringo)
min(bancoGringo$work_year, na.rm = TRUE)
names(bancoGringo) <- c("Cargo", "Nível de experiência", "Tipo de contrato", "Modelo de trabalho",
"Data da resposta", "Local de Residência", "x", "y", "Salário em dólares",
"Local da empresa", "Tamanho da empresa")
names(bancoGringo)
names(bancoGringo)[names(bancoGringo) == "Salário em dólares"] <- "Salário ($)"
bancoGringo <- read.csv("data_science_salaries.csv")
View(bancoGringo)
# Carregando os pacotes necessários
library(readr)
library(dplyr)
# Excluindo informações não relevantes do banco estrangeiro
bancoGringo <- bancoGringo %>%
select(-salary, -salary_currency)
# Renomeando as colunas do banco de dados estrangeiro
names(bancoGringo) <- c("Cargo", "Nível de experiência", "Tipo de contrato", "Modelo de trabalho",
"Data da resposta", "Local de Residência", "x", "y", "Salário ($)",
"Local da empresa", "Tamanho da empresa")
# Renomeando as colunas do banco de dados estrangeiro
names(bancoGringo) <- c("Cargo", "Nível de experiência", "Tipo de contrato", "Modelo de trabalho",
"Data da resposta", "Local de Residência", "Salário ($)",
"Local da empresa", "Tamanho da empresa")
bancoBR23$Data_da_resposta <- 2023
View(bancoBR23)
bancoBR24$Data_da_resposta <- 2024
names(bancoGringo) <- c("cargo", "nivel_de_experiencia", "tipo_de_contrato", "modelo_de_trabalho",
"data_da_resposta", "local_de_residencia", "salario_usdt",
"local_da_empresa", "tamanho_da_empresa")
bancoGringo <- bancoGringo %>% filter(data_da_resposta == 2023, 2024)
bancoGringo <- bancoGringo %>% filter(data_da_resposta == 2023 & 2024)
min(bancoGringo$data_da_resposta)
max(bancoGringo$data_da_resposta)
# Carregando os dados
bancoBR23 <- read.csv("stateofdata_2023.csv")
bancoBR24 <-read.csv("stateofdata_2024")
bancoGringo <- read.csv("data_science_salaries.csv")
bancoGringo <- bancoGringo %>%
select(-salary, -salary_currency)
# Renomeando as colunas do banco de dados estrangeiro
names(bancoGringo) <- c("cargo", "nivel_de_experiencia", "tipo_de_contrato", "modelo_de_trabalho",
"data_da_resposta", "local_de_residencia", "salario_usdt",
"local_da_empresa", "tamanho_da_empresa")
bancoGringo <- bancoGringo %>% filter(data_da_resposta == 2023 | data_da_resposta == 2024)
max(bancoGringo&data_da_resposta)
min(bancoGringo$data_da_resposta)
max(bancoGringo$data_da_resposta)
bancoBR23$Data_da_resposta <- 2023
bancoBR24$Data_da_resposta <- 2024
bancoBR23 <- bancoBR23 %>%
select("Faixa salarial", "Cargo Atual", "Nível", "Qual sua situação atual de trabalho",
"Numero de Funcionarios", "Regiao onde mora", "Setor")
bancoBR23 <- bancoBR23 %>%
select("('P2_h ', 'Faixa salarial')", "Cargo Atual", "Nível", "Qual sua situação atual de trabalho",
"Numero de Funcionarios", "Regiao onde mora", "Setor")
bancoBR23 <- bancoBR23 %>%
select("'P2_h ', 'Faixa salarial", "Cargo Atual", "Nível", "Qual sua situação atual de trabalho",
"Numero de Funcionarios", "Regiao onde mora", "Setor")
names(bancoBR23)
bancoBR23 <- bancoBR23 %>%
select(, c(32,30,25,37,36,35,31))
getwd()
demo(images)
demo(image())
getwd()
